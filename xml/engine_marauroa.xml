<?xml version='1.0'?>
<page name="marauroa">
  <updated date="2012-07-01"/>
  <version id="3.9.2"/>  
  <status value="complete"/>
  <keywords>online game development, game framework, game engine, network communication, asynchronous database access, mysql, h2, java, perceptions and actions</keywords>
  <short-description>Marauroa is Arianne's Multiplayer Online Engine, which you can use to build your own online games. Marauroa handles object management, asynchronous database persistence and perception based client-server communication.</short-description>
  <!-- 
  <rated>
   <entry>
      <![CDATA[<script type="text/javascript" src="http://www.ohloh.net/projects/4434/widgets/project_users?style=gray"></script>]]>
    </entry>
  </rated>
 -->
 <description><![CDATA[ 
Marauroa is completely written in Java using a multithreaded server architecture
with a TCP oriented network protocol, a MySQL or H2 based persistence engine and a 
flexible game system based on open systems totally expandible and modifiable 
by developers. Game rules can be written in Java, and Python scripts could be supported with a little work.<p/>
 
Marauroa is based on a philosophy we call Action/Perception, on each turn a 
perception is sent to clients explaining them what they percieve and clients 
can ask server to do any action in their names using actions.
Marauroa is totally game agnostic and makes very little assumptions about what 
are you trying to do, allowing a great freedom to create whatever type of game 
you want.<p/>

]]>
  </description>
  <extended><![CDATA[
	<p><h2>Instructions</h2>
	<ul>
	<li><a href="http://stendhalgame.org/wiki/Marauroa">Marauroa Wiki</a></li>
	<li><a href="http://stendhalgame.org/wiki/Marauroa_Core_API">Core API Overview</a></li>
	<li><a href="http://stendhalgame.org/wiki/Marauroa_Chat_Tutorial">Marauroa Chat Tutorial</a></li>
	<li><a href="http://stendhalgame.org/wiki/HowToWriteAdventureGamesUsingArianne">Adventure Games Concepts</a></li>
	</ul>

	<p><h2>Features</h2>
	Marauroa features state-of-art technologies as:
	<ul>
	<li>Java 1.5 and higher compatible</li>
	<li>Persistent objects</li>
	<li>Transactional relational database support</li>
	<li>Asynchronous database access</li>
	<li>Delta and Delta<sup>2</sup> Perceptions to reduce bandwidth usage</li>
	<li>Multiple independent zones of gameplay</li>
	<li>Server content streaming</li>
	<li>Turn based or real time gameplay</li>
	<li>Nicely documented: Design and specifications available</li>
	<li>Based on a XP development model</li>
	<li>Follows KISS principle: <i>Keep it simply stupid</i></li>
	<li>True Open Source Software: GNU/GPL</li>
	</ul>


	Remember that Marauroa is programming framework and so you need a game to do anything with Marauroa.
	
	<p><h2>Marauroa is based on very simple principles:</h2>
	<ul>
	<li>Clients communicate with the server, and vice-versa, using a TCP portable network protocol with reliability in mind to allow a stabler experience when online game lag occurs. </li>
	<li>To play a game every player needs an account on the server that is identified by an username and a password. </li>
	<li>Players use their account to login into the server and then choose a 'player' stored under their account to play with. The server then checks the login information using the MySQL backend and loads the player into the game using the persistence engine. </li>
	<li>Players send actions to the server. The action system is totally open and has nothing hard-coded so you can edit it totally to your game style. The server sends at regular intervals, called turns, a perception to each player to inform them about the state of the game and any relevant state modifications. Marauroa's perception system is based on the Delta^2 ideology: simply send what has changed. </li>
	<li>The server executes some code each turn in order to move the game status on. Using this hook it is simple to code triggers, timeouts, conditions and whatever kind of behavior you need. </li>
	<li>The server transparently and automatically stores players and game status modifications on the persistence engine, and also information decided by the game developer using their game definition scripts. </li>
	<li>Game rules can be coded in Java to allow simple and rapid development and without having to know anything about Marauroa's internals.</li>
	<li>Python scripts for the game rules could be supported with a little work.</li>
	<li>The server generates statistics of usage which are stored in a MySQL or H2 database (so you can later generate fancy statistics from them). Or in case you don't require them, they can be disabled to save CPU cycles and disk space. Marauroa features a modular structure that means modules can be changed and disabled without affecting the operation of other modules. </li>
	<li>Both the server and clients are fully and wisely documented, with documentation about specification and design and not just API documentation. </li>
	</ul>
]]>
	</extended>
<changelog><![CDATA[
<b>3.9.2</b>
<ul>
<li> workaround for IllegalArgumentException in proxy check (see <a href="http://icedtea.classpath.org/bugzilla/show_bug.cgi?id=1055">http://icedtea.classpath.org/bugzilla/show_bug.cgi?id=1055</a> )
</ul> 

<b>3.9.1</b>
<ul>
<li> added support for Sha512Crypt with salt and pepper
<li> fixed cacheable flag being ignored (e.g. map content may be cached)
</ul> 

<b>3.9</b>
<ul>
<li> failed logins are now logged with distinct status values
<li> client support for skippable empty perceptions
<li> ban messages are no longer restricted 256,
  if both server and client use the new protocol version 34
<li> added RPClass support (type checks and transfer compression) to RPAction
<li> content transfer includes a md5 hash of the content,
  if both server and client use the new protocol version 34
<li> fixed a bug which caused the server to use the client protocol version in its messages, even if it was higher than the version supported by the server
<li> automatically try to use a configured SOCKS-proxy. If it cannot be used, Marauroa falls back to direct connections
<li> RPRuleProcessorImpl provides a default implementation for IRPRuleProcessor
<li> new server.ini variable server_abuseContact to add a sentence with contact information to the ban dialog.
<li> use ENGINE instead of TYPE on table creation to be compatible with MySQL 5.5
</ul> 

See also <a href ="http://stendhalgame.org/wiki/Marauroa_3.9">the change document</a>.

<div class="unimportant">
<b>3.8.7</b>
<ul> 
<li> performance improvement by not deep copying all player objects every turn.
<li> performance improvement by skipping RPObject.id validation during cloning of RPSlots
<li> performance improvement by removing redundant calls to Attribute.has() and RPObject.getID()
<li> increased client side timeout while the server is processing the login (may do slow database queries)
<li> defined better indices for loginEvent designed to answer the number of recently failed logins question fast
</ul> 


<b>3.8.6</b>
<ul> 
<li> performance optimization in RPObject.getDifference() by drastically reducing the number of RPobject instantiations
<li> performance optimization in RPObject to create internal list/map objects only on demand
<li> build script now creates an additional minized jar file for clients: marauroa-client-only.jar
<li> improved messages on errors in server.ini
</ul> 

<b>3.8.5</b>
<ul> 
<li> fixed an issue on account renaming
<li> fixed an issue with special characters in character names
<li> zones are now stored asynchronously to the database
<li> fixed a co-modification issue in Attributes.clone() and Statistics.clone()
</ul> 


<b>3.8.4</b>
<ul> 
<li> fixed "Replacing content to transfer"
<li> added configurations parameters allow_account_creation and allow_character_creation
<li> added new Result.FAILED_CREATE_ON_MAIN_INSTEAD of account/character if it was disabled
<li> fixed bogus error message about accessing available transactions on closing the TransactionPool
</ul> 

<b>3.8.3</b>
<ul> 
<li> security fix preventing multiple logins of the same character on MySQL
<li> increased visibility of RPSlot.getOwner() to protected
</ul> 

<b>3.8.2</b>
<ul> 
<li> always call rewriteSql
<li> speed up first connection time on servers with low entropy
<li> increased visibility of RPSlot.add(RPObject object, boolean assignId) to protected
<li> add method to check the length of a column during database update
<li> added new Result.FAILED_OFFLINE of account/character creation to be used when the server is not reachable

<b>3.8.1</b>
<li> added new method ClientFrameWork.sendKeepAlive for keeping the connection open more than 10 minutes in the character selection state pre game
<li> added new method DBCommandQueue.getOneResult
<li> database: added id and status to characters table
<li> fixed an issue if a client with version 32 and a client with version 32 are in the same zone
</ul> 

<br><b>3.8</b>
<ul> 
<li> attributes of type map
<li> multi protocol version support for client server communication (from 
version 31 to 40)
<li> multi protocol version support for database storage
<li> added ability to RPClass.bake() the RPClass to speed up performance.
<li> logins are now processed asynchronously to speed up performance
<li> only count clients that are in game in the statistics (not the ones 
waiting to connect or waiting to logout)
</ul> 

<b>Please see <a href = "http://stendhalgame.org/wiki/Marauroa_3.8">http://stendhalgame.org/wiki/Marauroa_3.8</a> for details on 
those features</b>
</div>

]]>
<!-- 
<![CDATA[

<br><b>3.7.9</b>
<br>- all the features of 3.8 but with the client protocol version set to 32, so disabling the requesting of maps


<br><b>3.7</b>
<br>- Note: Make sure that you place the player into the world in RPRuleProcessor.onInit() and not in 
RPObjectFactory.transform
<br>- character list now includes the RPObject to provide details if the network protocol version is >= 32
<br>- improved performance by processing client message outside the PlayerEntryContainer lock
<br>- added detailed error message if a transaction is accessed from another thread
<br><b>3.6</b>
<br>- added number of unique ips to statistics in addition to number of players
<br>- provided an infrastructure for asynchronous database access (not used at all places yet)

<br><b>3.5.1</b>
<br>- fixed reading of size from the network stream in case it was split over multiple packets

<br><b>3.5</b>
<br>- limit number of parallel connections from one ip-address, see <a href="http://stendhalgame.org/wiki/index.php/Configuration_file_server.ini#Limits">Configuration file server.ini</a>
<br>- limit account creation per ip-address in a timeframe, see above
<br>- fixed null values on H2 in account.timedate and gameEvents.timedate


<br><b>3.4</b>
<br>- added support for the H2 serverless database system in addition to MySQL.
<br>- added configuration setting max_number_of_players in server.ini
<br>- added temporary bans stored in the new table accountban
<br>- fixed error message on inactive accounts claiming the account was banned.

<br><b>3.3</b>
<br>- games can now check the structure of the database using doesTableExist and doesColumnExist in order to update it automatically
<br>- RPEvents can now have RPSlots
<br>- RPObject.getContainer() and RPObject.getContainerBase() continue to return an RPObject, 
  use the new getContainerOwner() and getContainerOwnerBase() method to get a SlotOwner object
<br>- properly free transactions in case of exceptions
<br>- fixed a problem which caused parts of messages to be dropped when the size field was split across two tcp-packets 


<br><b>3.2.1</b>
<br>- fixed a deadlock when temporarily running out of database connections
<br>- fixed error message in case the pool runs out of connections (the list contained connections that were kicked because of an exception)

<br><b>3.2</b>
<br>- removed dependency on com.sun.*-classes
<br>- automatically add new columns in existing database tables
<br>- improved logging

<br><b>3.1</b>
<br>- always hash the password based on UTF-8 instead of the plattform default encoding on login
  (on account creation UTF-8 was used, so the first login was not possible if the default
  encoding was not UTF-8 and the password contained special characters)
<br>- made method dumpOpenTransactions public so that games can use it for debugging and monitoring
<br>- moved periodic saving of players out of buildPerceptions so that it gets it on performance profiling index
<br>- now all tables are created with TYPE=InnoDB
<br>- improved error messages
<br>- on serious errors which kill once of the background threads the complete server is now shutted down
<br>- fixed a NoSuchElementException in TransactionPool.beginWork();

<br><b>3.0</b>
<br>- split JDBCDatabase into several small ...DAO classes
<br>- added a new package marauroa.server.db for low level database stuff
<br>- started to work on supporting other database systems beside mysql
<br>- for help on how to port your application see <a 
href="http://stendhalgame.org/wiki/index.php/Refactoring_Database_Access_in_Marauroa">Refactoring database access in Marauroa</a>
<br>- fixed some compiler and javadoc warnings

<br><b>2.6.3</b>
<br>- fixed a NullPointerException in modify() when the zone does not exist (anymore)
<br>- improved error messages in exception

<br><b>2.6.2</b>
<br>- changed zones to ConcurrentHashmap to accomodate the needs of multi threading and changing number of zones

<br><b>2.6.1</b>
<br>- fixed a bug in deserialization, that made objects in slots uncontained, provided regression test
<br>- added checks for same to equals in some RP*

<br><b>2.6</b>
<br>- Attributes.clone() and RPSlot.clone() now conform to the contract of Object.clone()
<br>- Pair implements toString() to help debugging
<br>- Fixed some compiler warnings

<br><b>2.5</b>
<br>- Added timeout value so players get disconnected after 30 seconds if their connection is lost.
<br>- Updated protocol version.
<br>- Fixed problem with player left in game.
<br><b>Older</b>
<br>- Fixed problem with bogus network message.
<br/>- Added additional results to enum Result (for account/character creation)
<br/>- Added UnicodeSupportingInputStream and -Reader which automatically detect unicode type (and even support UTF-8Y) 
<b>-</b> Fixed MySQL 4.0 incompatibility.
<br/><b>-</b> Fixed bug at IRPZone.ID
<br/><b>-</b> Fixed problem with RPObject.hashCode.
<br/><b>-</b> Fixed memory leak because of Sun bug: http://bugs.sun.com/bugdatabase/view_bug.do?bug_id=6460501
<br/><b>-</b> Speed up server by several fixes.
<br/><b>-</b> Moved factory to a RPObjectFactory.
<br/><b>-</b> Added factory_implementation to server.ini
<br/><b>-</b> Fixed visibility of some methods.
<br/><b>-</b> Fixed lots of bugs.
<br/><b>-</b> Ported Python server interface to Marauroa 2.0
<br/><b>-</b> Added flood detection at server side.
<br/><b>-</b> RPEvents now extends Attributes, so it can have several values associated.
<br/><b>-</b> Send Connect NACK message for banned IP.
<br/><b>-</b> Fixed null pointer bugs at NIOServer.
<br/><b>-</b> Fixed concurrent access bug at Hash class.
<br/><b>-</b> Fixed javadocs.
<br/><b>-</b> Added RPLink entity.
<br/><b>-</b> Removed ClassNotFoundException from Serializer
<br/><b>-</b> Fixed a problem at getPreviousLogins to return latest logins.
<br/><b>-</b> Fixed bug at database methods for loading, storing and query for a character.
<br/><b>-</b> Fixed store and load zone database methods.
<br/><b>-</b> Fixed logout race condition.
<br/><b>-</b> Fixed network disconnect callback method not being called.
<br/><b>-</b> Fixed Player being removed twice from internal data structure.
<br/><b>-</b> Fixed Perception exception at client.
>br/><b>-</b> Fixed sync flag not correctly set at server.
<br/><b>-</b> Fixed default RPClass.
<br/><b>-</b> Fixed server sending messages after connection closed.
<br/><b>-</b> Fixed a problem with RPEvent.
<br/><b>-</b> Marauroa can be run as java <br/><b>-</b>jar marauroa.jar
<br/><b>-</b> Configuration file now defaults to server.ini
<br/><b>-</b> Incompatible with Stendhal 0.5x or Jmapacman games.
<br/><b>-</b> Added non blocking network server.
<br/><b>-</b> Removed UDP support.
<br/><b>-</b> Moved client to work with nio package.
<br/><b>-</b> Improved efficience of data structure accesses at server.
<br/><b>-</b> Simplified NetworkServerManager structure.
<br/><b>-</b> Documented widely everything.
<br/><b>-</b> Reimplemented Game package to improve efficience.
<br/><b>-</b> Removed useless exceptions.
<br/><b>-</b> Allowed to send a template object when creating account, so we can customize player object on creation time.
<br/><b>-</b> Removed incomplete action concept.
<br/><b>-</b> Simplified RPScheduler.
<br/><b>-</b> Simplified Database manager.
<br/><b>-</b> Moved to object stored as blogs.
<br/><b>-</b> Added RPEvent structure
<br/><b>-</b> Simplified RPObject, RPSlot, RPClass and Attributes.
<br/><b>-</b> Removed many useless exceptions
<br/><b>-</b> Fixed a bug in attributes definition that made them to be globally defined to all the classes.
<br/><b>-</b> Added static attributes to RPClass, so you can define them now instead of adding to each object.
<br/><b>-</b> RPZone stores and load objects now.
<br/><b>-</b> RPObject can be defined as storable
<br/><b>-</b> RPObject can be hidden
<br/><b>-</b> Simplified build script
<br/><b>-</b> Generated java docs as a new file
<br/><b>-</b> Split account and character. Now you can have really several characters per account.
      ]]>
-->
  </changelog>
  <navigation-image name="oneszeros.png" />
  <screenshots>
    <image name="games.png"/>
    <image name="messages.png"/>
    <image name="oneszeros.png"/>
  </screenshots>
  <files>
    <file type="binary" name="marauroa-XXX.zip">
      <description>This file contains the compiled version of marauroa plus all the dependencies.</description>
    </file>
    <file type="source" name="marauroa-XXX-src.tar.gz">
      <description>This file contains the source code to build marauroa.</description>
    </file>
  </files>
  <authors>
    <entry name="Miguel Angel Blanch Lardin" url="http://arianne.sourceforge.net/wiki/index.php/MiguelAngelBlanchLardin"/>
    <entry name="Waldemar Tribus" url="http://arianne.sourceforge.net/wiki/index.php/WaldemarTribus"/>
    <entry name="Benjamin Lerman" url="http://arianne.sourceforge.net/wiki/index.php/BenjaminLerman"/>
    <entry name="Stephen Ierodiaconou" url="http://arianne.sourceforge.net/wiki/index.php/StephenIerodiaconou"/>
    <entry name="Hendrik" url=""/>
  </authors>
</page>
